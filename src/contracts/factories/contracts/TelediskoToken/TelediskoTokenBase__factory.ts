/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TelediskoTokenBase,
  TelediskoTokenBaseInterface,
} from "../../../contracts/TelediskoToken/TelediskoTokenBase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "OfferCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OfferExpired",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OfferMatched",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingSet",
    type: "event",
  },
  {
    inputs: [],
    name: "OFFER_EXPIRATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "lockedBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "offeredBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "unlockedBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "vestingBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ac2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806359355736116100a2578063a269993d11610071578063a269993d14610242578063a457c2d714610255578063a9059cbb14610268578063cfe63ddf1461027b578063dd62ed3e1461028e57600080fd5b806359355736146101eb57806370a08231146101fe57806384955c881461022757806395d89b411461023a57600080fd5b8063313ce567116100e9578063313ce5671461018157806336ca03651461019057806339509351146101b95780633fe57a1d146101cc5780634cd88b76146101d657600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102a1565b60405161013091906115de565b60405180910390f35b61014c61014736600461164f565b610333565b6040519015158152602001610130565b6035545b604051908152602001610130565b61014c61017c366004611679565b61034b565b60405160128152602001610130565b61016061019e3660046116b5565b6001600160a01b031660009081526067602052604090205490565b61014c6101c736600461164f565b61036f565b61016062093a8081565b6101e96101e4366004611773565b610391565b005b6101606101f93660046116b5565b61039f565b61016061020c3660046116b5565b6001600160a01b031660009081526033602052604090205490565b6101606102353660046116b5565b6104d0565b6101236105e9565b6101e96102503660046117d7565b6105f8565b61014c61026336600461164f565b610745565b61014c61027636600461164f565b6107c0565b6101606102893660046116b5565b6107ce565b61016061029c3660046117f0565b6108cb565b6060603680546102b090611823565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc90611823565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b5050505050905090565b6000336103418185856108f6565b5060019392505050565b600033610359858285610a1a565b610364858585610a94565b506001949350505050565b60003361034181858561038283836108cb565b61038c9190611873565b6108f6565b61039b8282610c73565b5050565b60665460408051633bef226f60e21b815290516000926001600160a01b031691630ea018f791839163efbc89bc9160048083019260209291908290030181865afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610415919061188b565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0385166024820152604401602060405180830381865afa158015610460573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048491906118a4565b156104c857600061049483610ca4565b915050806104b7846001600160a01b031660009081526033602052604090205490565b6104c191906118c6565b9392505050565b506000919050565b60665460408051633bef226f60e21b815290516000926001600160a01b031691630ea018f791839163efbc89bc9160048083019260209291908290030181865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610546919061188b565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0385166024820152604401602060405180830381865afa158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b591906118a4565b156105cd5760006105c583610ca4565b949350505050565b506001600160a01b031660009081526033602052604090205490565b6060603780546102b090611823565b60665460408051633bef226f60e21b815290516001600160a01b0390921691630ea018f791839163efbc89bc916004808201926020929091908290030181865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e919061188b565b336040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa1580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd91906118a4565b6107385760405162461bcd60e51b815260206004820152602160248201527f54656c656469736b6f546f6b656e3a206e6f74206120636f6e7472696275746f6044820152603960f91b60648201526084015b60405180910390fd5b6107423382610d5f565b50565b6000338161075382866108cb565b9050838110156107b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161072f565b61036482868684036108f6565b600033610341818585610a94565b60665460408051633bef226f60e21b815290516000926001600160a01b031691630ea018f791839163efbc89bc9160048083019260209291908290030181865afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610844919061188b565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0385166024820152604401602060405180830381865afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906118a4565b156104c85760006108c383610ca4565b509392505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166109585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161072f565b6001600160a01b0382166109b95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161072f565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610a2684846108cb565b90506000198114610a8e5781811015610a815760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161072f565b610a8e84848484036108f6565b50505050565b6001600160a01b038316610af85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161072f565b6001600160a01b038216610b5a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161072f565b610b65838383610eb3565b6001600160a01b03831660009081526033602052604090205481811015610bdd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161072f565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610c14908490611873565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c6091815260200190565b60405180910390a3610a8e84848461103c565b600054610100900460ff16610c9a5760405162461bcd60e51b815260040161072f906118dd565b61039b8282611251565b6001600160a01b0381166000908152606960209081526040808320606890925282205481548392919083906001600160801b03165b83546001600160801b03600160801b90910481169082161015610d54576001600160801b038116600090815260018501602052604090208054421115610d2f576001810154610d289085611873565b9350610d41565b6001810154610d3e9084611873565b92505b5080610d4c81611928565b915050610cd9565b509590945092505050565b6001600160a01b03821660009081526068602090815260408083205460678352818420546033909352922054610d9591906118c6565b610d9f91906118c6565b811115610e055760405162461bcd60e51b815260206004820152602e60248201527f54656c656469736b6f546f6b656e3a206f66666572656420616d6f756e74206560448201526d7863656564732062616c616e636560901b606482015260840161072f565b6000610e1462093a8042611873565b90506000610e5a60696000866001600160a01b03166001600160a01b03168152602001908152602001600020604051806040016040528085815260200186815250611291565b604080516001600160801b03831681523360208201528082018690526060810185905290519192507fbc9e56cae6351f41cd4be50fc6e8ff4e5c6994d27010448a584ee9f845e89e10919081900360800190a150505050565b60665460408051633bef226f60e21b815290516001600160a01b0390921691630ea018f791839163efbc89bc916004808201926020929091908290030181865afa158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f29919061188b565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0386166024820152604401602060405180830381865afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9891906118a4565b1561103757610fa983600080611303565b6001600160a01b0383166000908152606860205260409020548111156110375760405162461bcd60e51b815260206004820152603760248201527f54656c656469736b6f546f6b656e3a207472616e7366657220616d6f756e742060448201527f6578636565647320756e6c6f636b656420746f6b656e73000000000000000000606482015260840161072f565b505050565b606554604051636fb12c5f60e11b81526001600160a01b0385811660048301528481166024830152604482018490529091169063df6258be90606401600060405180830381600087803b15801561109257600080fd5b505af11580156110a6573d6000803e3d6000fd5b505050506001600160a01b03831660009081526067602090815260408083205460339092529091205410156111355760405162461bcd60e51b815260206004820152602f60248201527f54656c656469736b6f546f6b656e3a207472616e7366657220616d6f756e742060448201526e657863656564732076657374696e6760881b606482015260840161072f565b60665460408051633bef226f60e21b815290516001600160a01b0390921691630ea018f791839163efbc89bc916004808201926020929091908290030181865afa158015611187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ab919061188b565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0386166024820152604401602060405180830381865afa1580156111f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121a91906118a4565b15611037576001600160a01b038316600090815260686020526040812080548392906112479084906118c6565b9091555050505050565b600054610100900460ff166112785760405162461bcd60e51b815260040161072f906118dd565b6036611284838261199c565b506037611037828261199c565b81546001600160801b03600160801b918290048116600090815260018086016020908152604083208651815590860151910155845490929004168360106112d783611928565b91906101000a8154816001600160801b0302191690836001600160801b03160217905550905092915050565b6001600160a01b038316600090815260696020526040902080546001600160801b03165b81546001600160801b03600160801b90910481169082161015611583576001600160801b03811660009081526001830160205260409020805442111561144f5760018101546001600160a01b03871660009081526068602052604081208054909190611394908490611873565b90915550506001810154604080516001600160801b03851681526001600160a01b0389166020820152908101919091527f1045242aa9cb5120416a010de00bec9810d7e5dc1796c7d33f69df3f444aaf37906060015b60405180910390a1825460018401906000906001600160801b0316858261141083611928565b82546101009290920a6001600160801b038181021990931691831602179091551681526020810191909152604001600090812081815560010155611570565b8360000361145d5750611583565b806001015484106114e557600181015461147790856118c6565b60018201546001600160a01b0388166000908152606860205260408120805493975091926114a6908490611873565b909155505060018101546040517fd0d70de2baa99922b89d5f189e78194a3d56c616aaf58fa941a374228aec3d08916113ea9185918a918a9190611a5c565b6001600160a01b0386166000908152606860205260408120805486929061150d908490611873565b925050819055508381600101600082825461152891906118c6565b90915550506040517fd0d70de2baa99922b89d5f189e78194a3d56c616aaf58fa941a374228aec3d0890611563908490899089908990611a5c565b60405180910390a1600093505b508061157b81611928565b915050611327565b508115610a8e5760405162461bcd60e51b8152602060048201526024808201527f54656c656469736b6f546f6b656e3a20616d6f756e742065786365656473206f604482015263333332b960e11b606482015260840161072f565b600060208083528351808285015260005b8181101561160b578581018301518582016040015282016115ef565b8181111561161d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461164a57600080fd5b919050565b6000806040838503121561166257600080fd5b61166b83611633565b946020939093013593505050565b60008060006060848603121561168e57600080fd5b61169784611633565b92506116a560208501611633565b9150604084013590509250925092565b6000602082840312156116c757600080fd5b6104c182611633565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126116f757600080fd5b813567ffffffffffffffff80821115611712576117126116d0565b604051601f8301601f19908116603f0116810190828211818310171561173a5761173a6116d0565b8160405283815286602085880101111561175357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561178657600080fd5b823567ffffffffffffffff8082111561179e57600080fd5b6117aa868387016116e6565b935060208501359150808211156117c057600080fd5b506117cd858286016116e6565b9150509250929050565b6000602082840312156117e957600080fd5b5035919050565b6000806040838503121561180357600080fd5b61180c83611633565b915061181a60208401611633565b90509250929050565b600181811c9082168061183757607f821691505b60208210810361185757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156118865761188661185d565b500190565b60006020828403121561189d57600080fd5b5051919050565b6000602082840312156118b657600080fd5b815180151581146104c157600080fd5b6000828210156118d8576118d861185d565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006001600160801b038083168181036119445761194461185d565b6001019392505050565b601f82111561103757600081815260208120601f850160051c810160208610156119755750805b601f850160051c820191505b8181101561199457828155600101611981565b505050505050565b815167ffffffffffffffff8111156119b6576119b66116d0565b6119ca816119c48454611823565b8461194e565b602080601f8311600181146119ff57600084156119e75750858301515b600019600386901b1c1916600185901b178555611994565b600085815260208120601f198616915b82811015611a2e57888601518255948401946001909101908401611a0f565b5085821015611a4c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160801b039490941684526001600160a01b0392831660208501529116604083015260608201526080019056fea2646970667358221220a6bda4df430b8ebd5954519b6dfce5138a05ba6eeb4950e0c18d05749e66da3964736f6c634300080f0033";

type TelediskoTokenBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TelediskoTokenBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TelediskoTokenBase__factory extends ContractFactory {
  constructor(...args: TelediskoTokenBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TelediskoTokenBase> {
    return super.deploy(overrides || {}) as Promise<TelediskoTokenBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TelediskoTokenBase {
    return super.attach(address) as TelediskoTokenBase;
  }
  override connect(signer: Signer): TelediskoTokenBase__factory {
    return super.connect(signer) as TelediskoTokenBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TelediskoTokenBaseInterface {
    return new utils.Interface(_abi) as TelediskoTokenBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TelediskoTokenBase {
    return new Contract(address, _abi, signerOrProvider) as TelediskoTokenBase;
  }
}
