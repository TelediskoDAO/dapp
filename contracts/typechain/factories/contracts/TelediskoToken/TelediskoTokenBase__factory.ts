/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TelediskoTokenBase,
  TelediskoTokenBaseInterface,
} from "../../../contracts/TelediskoToken/TelediskoTokenBase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "vestingBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146101c3578063a457c2d7146101cb578063a9059cbb146101de578063dd62ed3e146101f157600080fd5b806339509351146101725780634cd88b761461018557806370a082311461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806336ca036514610149575b600080fd5b6100dc610204565b6040516100e99190610a6d565b60405180910390f35b610105610100366004610ade565b610296565b60405190151581526020016100e9565b6035545b6040519081526020016100e9565b610105610135366004610b08565b6102ae565b604051601281526020016100e9565b610119610157366004610b44565b6001600160a01b031660009081526069602052604090205490565b610105610180366004610ade565b6102d2565b610198610193366004610c09565b6102f4565b005b6101196101a8366004610b44565b6001600160a01b031660009081526033602052604090205490565b6100dc610302565b6101056101d9366004610ade565b610311565b6101056101ec366004610ade565b610391565b6101196101ff366004610c6d565b61039f565b60606036805461021390610ca0565b80601f016020809104026020016040519081016040528092919081815260200182805461023f90610ca0565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b5050505050905090565b6000336102a48185856103ca565b5060019392505050565b6000336102bc8582856104ee565b6102c7858585610568565b506001949350505050565b6000336102a48185856102e5838361039f565b6102ef9190610cda565b6103ca565b6102fe8282610724565b5050565b60606037805461021390610ca0565b6000338161031f828661039f565b9050838110156103845760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102c782868684036103ca565b6000336102a4818585610568565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b03831661042c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161037b565b6001600160a01b03821661048d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161037b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104fa848461039f565b9050600019811461056257818110156105555760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161037b565b61056284848484036103ca565b50505050565b6001600160a01b0383166105cc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161037b565b6001600160a01b03821661062e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161037b565b610639838383610755565b6001600160a01b038316600090815260336020526040902054818110156106b15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161037b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107119086815260200190565b60405180910390a36105628484846108be565b600054610100900460ff1661074b5760405162461bcd60e51b815260040161037b90610d00565b6102fe8282610a2d565b6066546001600160a01b0316336001600160a01b03161480610859575060675460408051633bef226f60e21b815290516001600160a01b0390921691630ea018f791839163efbc89bc916004808201926020929091908290030181865afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190610d4b565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0386166024820152604401602060405180830381865afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108579190610d64565b155b6108b95760405162461bcd60e51b815260206004820152602b60248201527f54656c656469736b6f546f6b656e3a20636f6e7472696275746f722063616e6e60448201526a37ba103a3930b739b332b960a91b606482015260840161037b565b505050565b606554604051636fb12c5f60e11b81526001600160a01b0385811660048301528481166024830152604482018490529091169063df6258be90606401600060405180830381600087803b15801561091457600080fd5b505af1158015610928573d6000803e3d6000fd5b5050506001600160a01b03841690506109a25760685460405163228bea5360e21b81526001600160a01b0384811660048301526024820184905290911690638a2fa94c90604401600060405180830381600087803b15801561098957600080fd5b505af115801561099d573d6000803e3d6000fd5b505050505b6001600160a01b03831660009081526069602090815260408083205460339092529091205410156108b95760405162461bcd60e51b815260206004820152602f60248201527f54656c656469736b6f546f6b656e3a207472616e7366657220616d6f756e742060448201526e657863656564732076657374696e6760881b606482015260840161037b565b600054610100900460ff16610a545760405162461bcd60e51b815260040161037b90610d00565b6036610a608382610dd4565b5060376108b98282610dd4565b600060208083528351808285015260005b81811015610a9a57858101830151858201604001528201610a7e565b81811115610aac576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ad957600080fd5b919050565b60008060408385031215610af157600080fd5b610afa83610ac2565b946020939093013593505050565b600080600060608486031215610b1d57600080fd5b610b2684610ac2565b9250610b3460208501610ac2565b9150604084013590509250925092565b600060208284031215610b5657600080fd5b610b5f82610ac2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b8d57600080fd5b813567ffffffffffffffff80821115610ba857610ba8610b66565b604051601f8301601f19908116603f01168101908282118183101715610bd057610bd0610b66565b81604052838152866020858801011115610be957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610c1c57600080fd5b823567ffffffffffffffff80821115610c3457600080fd5b610c4086838701610b7c565b93506020850135915080821115610c5657600080fd5b50610c6385828601610b7c565b9150509250929050565b60008060408385031215610c8057600080fd5b610c8983610ac2565b9150610c9760208401610ac2565b90509250929050565b600181811c90821680610cb457607f821691505b602082108103610cd457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610cfb57634e487b7160e01b600052601160045260246000fd5b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215610d5d57600080fd5b5051919050565b600060208284031215610d7657600080fd5b81518015158114610b5f57600080fd5b601f8211156108b957600081815260208120601f850160051c81016020861015610dad5750805b601f850160051c820191505b81811015610dcc57828155600101610db9565b505050505050565b815167ffffffffffffffff811115610dee57610dee610b66565b610e0281610dfc8454610ca0565b84610d86565b602080601f831160018114610e375760008415610e1f5750858301515b600019600386901b1c1916600185901b178555610dcc565b600085815260208120601f198616915b82811015610e6657888601518255948401946001909101908401610e47565b5085821015610e845787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122064c9e873e0fba8789a71eab7a8aa1221869bcf67a5979316d2541035f16bdaa964736f6c634300080f0033";

type TelediskoTokenBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TelediskoTokenBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TelediskoTokenBase__factory extends ContractFactory {
  constructor(...args: TelediskoTokenBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TelediskoTokenBase> {
    return super.deploy(overrides || {}) as Promise<TelediskoTokenBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TelediskoTokenBase {
    return super.attach(address) as TelediskoTokenBase;
  }
  override connect(signer: Signer): TelediskoTokenBase__factory {
    return super.connect(signer) as TelediskoTokenBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TelediskoTokenBaseInterface {
    return new utils.Interface(_abi) as TelediskoTokenBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TelediskoTokenBase {
    return new Contract(address, _abi, signerOrProvider) as TelediskoTokenBase;
  }
}
