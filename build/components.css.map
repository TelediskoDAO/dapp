{
  "version": 3,
  "file": "components.css",
  "sources": [
    "App.svelte",
    "CurrentTask.svelte",
    "Foldable.svelte",
    "MismatchError.svelte",
    "RuntimeErrors.svelte",
    "Sidebar.svelte",
    "TopAppBar.svelte",
    "UpdateAvailable.svelte",
    "Index.svelte",
    "Info.svelte",
    "Login.svelte",
    "Index.svelte",
    "Report.svelte",
    "Duration.svelte",
    "Durations.svelte",
    "Index.svelte",
    "Task.svelte",
    "Tasks.svelte",
    "Activity.svelte",
    "Index.svelte",
    "Index.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { logger } from \"./state/runtime\";\n  import { user, username } from \"./state/odoo\";\n  import { title } from \"./state/runtime\";\n  import { slide } from \"svelte/transition\";\n\n  import TopAppBar from \"./components/TopAppBar.svelte\";\n  import UpdateAvailable from \"./components/UpdateAvailable.svelte\";\n  import Sidebar from \"./components/Sidebar.svelte\";\n  import MismatchError from \"src/components/MismatchError.svelte\";\n  import RuntimeErrors from \"src/components/RuntimeErrors.svelte\";\n\n  import Router from \"svelte-spa-router\";\n  import { replace } from \"svelte-spa-router\";\n\n  // Pages\n  import PageIndex from \"./pages/Index.svelte\";\n  import PageConnectOdoo from \"./pages/connect/odoo/Index.svelte\";\n  import PageTaskIndex from \"./pages/task/Index.svelte\";\n  import PageTimeline from \"./pages/timeline/Index.svelte\";\n  import PageReport from \"./pages/report/Index.svelte\";\n  import PageTokens from \"./pages/tokens/Index.svelte\";\n  import PageResolutions from \"./pages/resolutions/Index.svelte\";\n  import PageResolutionsNew from \"./pages/resolutions/New.svelte\";\n\n  import NotFound from \"./NotFound.svelte\";\n\n  const log = logger(\"App\");\n\n  $: {\n    if ($user) {\n      replace(\"/tasks\");\n    }\n  }\n\n  const routes = {\n    \"/\": PageIndex,\n    \"/tasks\": PageTaskIndex,\n    \"/tasks/:stage\": PageTaskIndex,\n    \"/timeline\": PageTimeline,\n    \"/report\": PageReport,\n    \"/tokens\": PageTokens,\n    \"/resolutions\": PageResolutions,\n    \"/resolutions/new\": PageResolutionsNew,\n    \"/connect/odoo\": PageConnectOdoo,\n    \"*\": NotFound,\n  };\n\n  log(\"Boot\");\n</script>\n\n<style>\n  .loading {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    background-color: white;\n    z-index: 99999;\n    font-size: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loading p {\n    animation: blink 1s infinite;\n  }\n</style>\n\n<svelte:head>\n  <title>{$title}</title>\n</svelte:head>\n\n{#if $username && !$user}\n  <div out:slide class=\"loading\">\n    <p>loading...</p>\n  </div>\n{:else}\n  <Sidebar />\n\n  <main>\n    <MismatchError />\n    <TopAppBar />\n    <Router {routes} restoreScrollState={true} />\n    <UpdateAvailable />\n  </main>\n\n  <RuntimeErrors />\n{/if}\n",
    "<script>\n  import {\n    tasks,\n    currentTask,\n    currentDuration,\n    currentHours,\n    currentHoursTotal,\n  } from \"src/state/odoo\";\n  import { toPrettyDuration } from \"src/utils\";\n</script>\n\n<style>\n  h3 {\n    margin-top: 0;\n  }\n\n  h3,\n  p {\n    font-size: var(--font-s);\n  }\n\n  h4,\n  p {\n    margin: 0;\n  }\n\n  h4 {\n    margin-bottom: var(--size-xs);\n    font-weight: normal;\n  }\n  section {\n    background-color: #aad2d6;\n  }\n</style>\n\n{#if $currentTask}\n  <section>\n    <h3>Current task</h3>\n    <h4>{$currentTask.name}</h4>\n    <p>\n      <i>timer</i>\n      {toPrettyDuration($currentHoursTotal)},\n      <a href=\"#/tasks?scrollToCurrent\"><i>open_in_new</i> go to task</a>\n    </p>\n  </section>\n{/if}\n",
    "<script>\n  //export let key = null;\n  export let showOverride = null;\n  export let show = false;\n\n  const storageKey = null;\n  //const storageKey = key !== null ? `widget:foldable:show:${key}` : null;\n\n  if (storageKey) {\n    const previousValue = JSON.parse(localStorage.getItem(storageKey));\n    if (previousValue !== null) {\n      show = previousValue;\n    }\n  }\n\n  if (showOverride !== null) {\n    show = showOverride;\n  }\n\n  function handleShow() {\n    show = !show;\n\n    if (storageKey) {\n      localStorage.setItem(storageKey, show);\n    }\n  }\n</script>\n\n<style>\n  .header {\n    cursor: pointer;\n  }\n</style>\n\n<div>\n  <div class=\"header\" on:click={handleShow}>\n    <slot name=\"header\" visible={show} />\n  </div>\n  {#if show}\n    <slot name=\"body\" />\n  {/if}\n</div>\n",
    "<script>\n  import { networkMismatchError, addressMismatchError } from \"../state/eth\";\n  import { user } from \"../state/odoo\";\n</script>\n\n<style>\n  div {\n    color: var(--color-warning-fg);\n    background-color: var(--color-warning-bg);\n    text-align: center;\n    padding: var(--size-s);\n    margin-bottom: var(--size-m);\n  }\n</style>\n\n{#if $user && !$user.address}\n  <div>\n    <strong>The DAO doesn't know how to pay you.</strong>\n    <a\n      href=\"https://odoo.teledisko.com/web#id={$user.uid}&action=71&model=res.users&view_type=form&menu_id=4\"\n      target=\"_blank\"\n    >Open your Odoo settings</a>\n    and set your Ethereum address.\n  </div>\n{:else if $networkMismatchError}\n  <div>\n    Your wallet is connected to\n    <strong>{$networkMismatchError.has}</strong>, please connect it to\n    <strong>{$networkMismatchError.want}</strong>\n  </div>\n{:else if $addressMismatchError}\n  <div>\n    Your wallet address is\n    <strong>{$addressMismatchError.has}</strong>, but your profile is registered\n    with address\n    <strong>{$addressMismatchError.want}</strong>, please change address.\n  </div>\n{/if}\n",
    "<script>\n  import { errors } from \"src/state/runtime\";\n</script>\n\n<style>\n  section {\n    z-index: 1000;\n    background-color: black;\n    color: white;\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n  }\n\n  p {\n    padding: var(--size-s);\n    max-width: var(--max-width);\n    margin: 0 auto;\n  }\n\n  strong {\n    background-color: red;\n    color: white;\n    padding: var(--size-xs);\n    font-weight: bold;\n  }\n</style>\n\n{#if $errors.length}\n  <section class=\"runtime-error\">\n    {#each $errors as error}\n      <p><strong>Error:</strong> <code>{error.reason.message}</code></p>\n    {/each}\n    <p>\n      What to do now? Would be nice if you can\n      <a\n        href=\"https://gitlab.com/teledisko/dao/-/issues/new\"\n        target=\"_blank\"\n      >create an issue</a>\n      describing what happened. To keep using this app\n      <button on:click={() => window.location.reload()}>reload the page</button>.\n    </p>\n  </section>\n{/if}\n",
    "<script>\n  import active from \"svelte-spa-router/active\";\n  import CurrentTask from \"./CurrentTask.svelte\";\n  import { user, refresh } from \"../state/odoo\";\n  import CONFIG from \"src/config\";\n\n  $: refreshTime = new Date($refresh).toLocaleTimeString();\n\n  const buildDate = new Date(CONFIG.date)\n    .toISOString()\n    .substr(0, 19)\n    .replace(\"T\", \" \");\n\n  function closeSidebar() {\n    document.getElementById(\"sidebar--toggle\").checked = false;\n  }\n\n  function handleRefresh() {\n    $refresh = Date.now();\n  }\n</script>\n\n<style>\n  .user-data {\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n  }\n  .user-data img {\n    width: var(--size-m);\n    display: block;\n    margin-right: var(--size-xs);\n    border-radius: 100%;\n  }\n\n  small {\n    color: var(--color-gray-5);\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n  li {\n    list-style-type: none;\n  }\n  li a {\n    text-decoration: none;\n    padding: 0.4rem 0;\n    display: block;\n    margin-bottom: var(--size-xs);\n  }\n  li a i {\n    color: #888;\n    font-size: 1.5rem;\n    vertical-align: bottom;\n  }\n  :global(aside section ul a.active i) {\n    color: black !important;\n  }\n\n  .refresh h5 {\n    font-weight: normal;\n    margin-bottom: var(--size-xs);\n  }\n</style>\n\n<aside>\n  <input id=\"sidebar--toggle\" type=\"checkbox\" />\n  <nav class=\"content\">\n    <section class=\"user-data\">\n      {#if $user}\n        <img alt=\"User's avatar\" src=\"data:image/jpeg;base64,{$user.image}\" />\n        {$user.name}\n      {/if}\n    </section>\n\n    <CurrentTask />\n\n    <section>\n      <ul>\n        {#if $user}\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/tasks\"><i>timer</i>\n              Time Tracking</a>\n          </li>\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/timeline\"><i\n              >calendar_today</i>\n              Timeline</a>\n          </li>\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/report\"><i\n              >fact_check</i>\n              Report</a>\n          </li>\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/tokens\"><i\n              >account_balance</i>\n              Tokens</a>\n          </li>\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/connect/odoo\"><i\n              >settings</i>\n              Settings</a>\n          </li>\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/resolutions\"><i\n              >verified</i>\n              Resolutions</a>\n          </li>\n        {:else}\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/\"><i>home</i>\n              Home Page</a>\n          </li>\n          <li>\n            <a use:active on:click={closeSidebar} href=\"#/connect/odoo\"><i\n              >login</i>\n              Log in</a>\n          </li>\n        {/if}\n      </ul>\n    </section>\n\n    <section class=\"refresh\">\n      <h5>Last refresh: {refreshTime}</h5>\n      <button on:click={handleRefresh} on:click={closeSidebar} class=\"small\"><i\n        >sync</i>Refresh</button>\n    </section>\n\n    <section>\n      <small>Software version: {CONFIG.version}</small><br />\n      <small>Build date: {buildDate}</small>\n    </section>\n  </nav>\n  <label class=\"overlay\" for=\"sidebar--toggle\" />\n</aside>\n",
    "<script>\n  import { title } from \"src/state/runtime\";\n</script>\n\n<style>\n  section {\n    display: flex;\n    align-items: center;\n  }\n\n  h1 {\n    font-size: var(--font-l);\n    flex: 1;\n    margin: 0;\n    text-align: center;\n  }\n</style>\n\n<header>\n  <section>\n    <label for=\"sidebar--toggle\"><i>menu</i></label>\n    <h1>{$title}</h1>\n  </section>\n</header>\n",
    "<script>\n  import { updateAvailable } from \"src/state/runtime\";\n</script>\n\n<style>\n  div {\n    z-index: 1000;\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    text-align: right;\n    background-color: #d3f7ff;\n    border-top: var(--size-xxs) solid rgba(0, 0, 0, 0.1);\n  }\n  button {\n    /* https://codepen.io/nohoid/pen/kIfto */\n    background: linear-gradient(\n      124deg,\n      #ff2400,\n      #e81d1d,\n      #e8b71d,\n      #e3e81d,\n      #1de840,\n      #1ddde8,\n      #2b1de8,\n      #dd00f3,\n      #dd00f3\n    );\n    background-size: 1800% 1800%;\n    animation: rainbow 18s ease infinite;\n    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n      1px 1px 0 #000;\n    font-weight: bold;\n    font-size: var(--font-l);\n    color: white;\n    padding: var(--size-xs) var(--size-s);\n    border: var(--size-xxs) solid rgba(0, 0, 0, 0.2);\n  }\n\n  @keyframes rainbow {\n    0% {\n      background-position: 0% 82%;\n    }\n    50% {\n      background-position: 100% 19%;\n    }\n    100% {\n      background-position: 0% 82%;\n    }\n  }\n</style>\n\n{#if $updateAvailable}\n  <div>\n    <section>\n      New version available\n      <button on:click={() => $updateAvailable()}>Update App</button>\n    </section>\n  </div>\n{/if}\n",
    "<script>\n  import { user } from \"src/state/odoo\";\n  import { platform } from \"src/state/runtime\";\n</script>\n\n<style>\n  .medium {\n    padding: 0;\n  }\n</style>\n\n<section>\n  <h1>Teledisko DAO</h1>\n\n  {#if $platform.isStandalone}\n    <p><a href=\"#/connect/odoo\">Log in now</a> and start using Teledisko DAO</p>\n  {:else}\n    <p>\n      This application allows contributors to interact with\n      <strong>Teledisko DAO</strong>.\n    </p>\n\n    <h2>For your laptop</h2>\n\n    <p>\n      <a href=\"#/connect/odoo\">Log in now</a>\n      and start using Teledisko DAO.\n    </p>\n\n    {#if $platform.isAndroid}\n      <h2><i>phone_android</i> Install the App</h2>\n      <p>\n        On your browser, tap on the\n        <i class=\"medium\">more_vert</i>\n        icon, then\n        <em>Add to Home Screen</em>\n        or\n        <em>Install</em>.\n      </p>\n    {:else if $platform.isIOS}\n      <h2><i>phone_iphone</i> Install the App</h2>\n      <p>\n        On your browser, tap on the\n        <img\n          class=\"icon medium\"\n          alt=\"iOS share icon\"\n          src=\"images/icons/ios-share.png\"\n        />\n        icon, then\n        <em>Add to Home Screen</em>.\n      </p>\n    {:else}\n      <h2>For your smartphone</h2>\n\n      <p>\n        This website can also be installed as an app in your Android phone or\n        iPhone. Open this website from your smartphone and follow the\n        instructions.\n      </p>\n    {/if}\n  {/if}\n</section>\n",
    "<script>\n  import { logs } from \"../../../state/runtime\";\n  let showLogs = false;\n\n  async function handleReset() {\n    if (confirm(\"This will reset your app. You will have to login again.\")) {\n      if (navigator.serviceWorker) {\n        const registration = await navigator.serviceWorker.getRegistration(\".\");\n        if (registration) {\n          await registration.unregister();\n        }\n      }\n      window.localStorage.clear();\n      window.setTimeout(() => window.location.reload(), 1000);\n    }\n  }\n  async function handleCheckForUpdates() {\n    if (navigator.serviceWorker) {\n      const registration = await navigator.serviceWorker.getRegistration(\".\");\n      if (registration) {\n        try {\n          await registration.update();\n        } catch (e) {\n          console.log(\"Error checking for updates\");\n        }\n      }\n    }\n  }\n\n  function handleShowLogs() {\n    showLogs = true;\n  }\n</script>\n\n<style>\n  textarea {\n    display: block;\n    width: 100%;\n    height: 50vh;\n  }\n</style>\n\n<section>\n  <h2>App info</h2>\n  {#if navigator.serviceWorker}\n    <button on:click={handleCheckForUpdates}>Check for updates</button>\n  {/if}\n  <button on:click={handleReset}>Reset Storage and Cache</button>\n  <br />\n  <button on:click={handleShowLogs}>Show Logs</button>\n  <button on:click={() => window.location.reload()}>Reload</button>\n</section>\n\n<section>\n  {#if showLogs && $logs}<textarea readonly>{$logs.join('\\n')}</textarea>{/if}\n</section>\n",
    "<script>\n  import { connectToOdoo, user, username, password } from \"../../../state/odoo\";\n  import { push } from \"svelte-spa-router\";\n\n  let loginError;\n\n  async function handleConnect(e) {\n    const form = new FormData(e.target);\n    try {\n      await connectToOdoo(form.get(\"username\"), form.get(\"password\"));\n      push(\"/\");\n    } catch (e) {\n      loginError = true;\n    }\n  }\n\n  function handleDisconnect() {\n    $username = \"\";\n    $password = \"\";\n    push(\"/\");\n  }\n</script>\n\n<style>\n  details {\n    margin-top: var(--size-l);\n  }\n</style>\n\n<section>\n  <h2>Odoo Login</h2>\n  {#if $user}\n    <p>You are connected already.</p>\n    <button on:click={handleDisconnect}>Disconnect</button>\n  {:else}\n    <form on:submit|preventDefault={handleConnect}>\n      <fieldset>\n        <legend>Connect using your Odoo credentials.</legend>\n        <p>\n          <label>Odoo Username<br /> <input name=\"username\" required /> </label>\n        </p>\n        <p>\n          <label>Odoo Password<br />\n            <input name=\"password\" type=\"password\" required />\n          </label>\n        </p>\n\n        {#if loginError}\n          <p class=\"error\">\n            Login error, please check your username and password.\n          </p>\n        {/if}\n\n        <button type=\"submit\">Connect</button>\n      </fieldset>\n    </form>\n  {/if}\n\n  <details>\n    <summary>Is it secure?</summary>\n    <p>\n      Your credentials are stored in your browser and are\n      <strong>only</strong>\n      used to load and save data in the\n      <a\n        href=\"https://odoo.teledisko.com/\"\n        target=\"_blank\"\n      >odoo.teledisko.com</a>\n      server. There is\n      <strong>no third party involved</strong>.\n    </p>\n\n    <p>\n      <strong>Note:</strong>\n      this is just a temporary solution until\n      <a href=\"https://gitlab.com/teledisko/dao/-/tree/master/tips/2\">TIP-2</a>\n      is ready.\n    </p>\n  </details>\n</section>\n",
    "<script>\n  import Report from \"./Report.svelte\";\n  import { toPrettyDuration, toPrettyCurrency } from \"src/utils\";\n  import {\n    linesByProject,\n    totalHours,\n    totalValue,\n    prospectByProject,\n    prospectTotalHours,\n    prospectTotalValue,\n  } from \"src/state/odoo/timesheet\";\n  import { title } from \"src/state/runtime\";\n  title.set(\"Reports\");\n</script>\n\n<style>\n  h2 {\n    text-align: center;\n    margin-bottom: var(--size-s);\n  }\n\n  ul {\n    padding: 0;\n    margin: 0 0 var(--size-m) 0;\n    display: flex;\n    justify-content: center;\n  }\n\n  li {\n    list-style-type: none;\n    padding: var(--size-xs) var(--size-s);\n    margin: 0 var(--size-s);\n  }\n\n  ul li span,\n  ul li strong {\n    margin: var(--size-xs) 0;\n    text-align: center;\n    display: block;\n  }\n  ul li strong {\n    font-size: var(--font-l);\n  }\n\n  .note {\n    font-size: var(--font-s);\n    color: var(--color-gray-9);\n    text-align: center;\n  }\n\n  .prospect {\n    margin-bottom: var(--size-l);\n  }\n</style>\n\n<section>\n  <div class=\"prospect\">\n    <h2>Tasks done</h2>\n\n    <p class=\"note\">\n      The following tasks\n      <strong>have not been approved</strong>\n      by the project controller yet\n    </p>\n\n    <ul>\n      <li class=\"value\">\n        <span>Value</span>\n        <strong>{toPrettyCurrency($prospectTotalValue)}</strong>\n      </li>\n\n      <li class=\"time\">\n        <span>Time</span>\n        <strong>{toPrettyDuration($prospectTotalHours)}</strong>\n      </li>\n    </ul>\n\n    {#if $prospectByProject.length}\n      <Report linesByProject={$prospectByProject} />\n    {:else}\n      <p class=\"note\">No hours logged.</p>\n    {/if}\n  </div>\n\n  <div class=\"approved\">\n    <h2>Task approved</h2>\n\n    <p class=\"note\">You will receive tokens within a week</p>\n\n    <ul>\n      <li class=\"value\">\n        <span>Value</span>\n        <strong>{toPrettyCurrency($totalValue)}</strong>\n      </li>\n\n      <li class=\"time\">\n        <span>Time</span>\n        <strong>{toPrettyDuration($totalHours)}</strong>\n      </li>\n    </ul>\n\n    {#if $linesByProject.length}\n      <Report linesByProject={$linesByProject} />\n    {:else}\n      <p class=\"note\">\n        All\n        <strong>approved</strong>\n        tasks have been paid already.\n      </p>\n    {/if}\n  </div>\n</section>\n",
    "<script>\n  import { toPrettyDuration, toPrettyCurrency } from \"src/utils\";\n  export let linesByProject;\n</script>\n\n<style>\n  ol {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  h4 {\n    margin-bottom: var(--size-xs);\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  tbody tr:nth-child(odd) {\n    background-color: #f5f5f5;\n  }\n\n  td {\n    padding: var(--size-xs);\n  }\n\n  td.value {\n    text-align: right;\n    font-weight: bold;\n  }\n\n  .metadata {\n    padding: 0;\n    margin: var(--size-xs) 0 0 0;\n  }\n  .metadata li {\n    display: inline-block;\n    padding: var(--size-xxs) var(--size-xs);\n    font-size: var(--font-s);\n    border-radius: var(--size-xs);\n    background-color: var(--color-gray-1);\n    color: #333;\n  }\n  .metadata li i {\n    vertical-align: middle;\n    margin-right: var(--size-xs);\n  }\n</style>\n\n<ol>\n  {#each linesByProject as project}\n    <li>\n      <h4>Project: {project.name}</h4>\n      <table>\n        <tbody>\n          {#each project.lines as line}\n            <tr>\n              <td>\n                {line.name}\n                <ul class=\"metadata\">\n                  <li>{line.tier} tier</li>\n                  <li><i>timer</i>{toPrettyDuration(line.hours)}</li>\n                </ul>\n              </td>\n              <td class=\"value\">{toPrettyCurrency(line.value)}</td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </li>\n  {/each}\n</ol>\n",
    "<script>\n  // FIXME durationsOpen should not be here.\n  import {\n    durationsOpen,\n    removeDuration,\n    updateDuration,\n    createDuration,\n    currentTask,\n    currentDuration,\n    stopDuration,\n  } from \"src/state/odoo\";\n  import { clock } from \"src/state/clock\";\n  import {\n    toPrettyDuration,\n    toPrettyRange,\n    splitDate,\n    joinDate,\n  } from \"src/utils\";\n\n  export let editable = true;\n  export let handleDone = null;\n  export let taskId = null;\n  export let duration = null;\n\n  let edit = duration ? false : true;\n\n  let startDate, startTime, endDate, endTime, range, hours;\n  let keepTracking = !taskId && !(duration && duration.end);\n\n  if (taskId) {\n    [startDate, startTime] = splitDate();\n    [endDate, endTime] = splitDate();\n  }\n\n  $: {\n    let currentTime = Math.max($clock, Date.now());\n    range = duration && toPrettyRange(duration.start, duration.end);\n    hours =\n      duration &&\n      (duration.end === false\n        ? (currentTime - duration.start) / (60 * 60 * 1000)\n        : duration.hours);\n\n    if (!edit) {\n      [startDate, startTime] = splitDate(duration.start);\n      [endDate, endTime] = splitDate(duration.end);\n    }\n  }\n\n  async function handleSubmit() {\n    // If there is no `duration`, we create a new duration connected to `taskId`\n    let start = joinDate(startDate, startTime);\n    let end = keepTracking ? false : joinDate(endDate, endTime);\n    if (keepTracking && $currentTask !== undefined && $currentTask !== taskId) {\n      //const message = `You are tracking \"${$currentTask.name}\". `;\n      //if (confirm(message)) {\n      await $stopDuration($currentDuration.id);\n      //}\n    }\n    if (duration) {\n      await $updateDuration(duration.id, start, end);\n      edit = false;\n    } else if (taskId) {\n      await $createDuration(taskId, start, end);\n      handleDone();\n    }\n  }\n</script>\n\n<style>\n  .duration {\n    font-weight: bold;\n  }\n\n  .options {\n    text-align: right;\n  }\n\n  .timer {\n    animation: blink 1s infinite;\n  }\n\n  .warning {\n    color: var(--color-warning-fg);\n    background-color: var(--color-warning-bg);\n    padding: var(--size-xs);\n  }\n\n  .buttons {\n    justify-content: flex-end;\n  }\n\n  .edit .buttons {\n    justify-content: flex-start;\n  }\n\n  .edit span {\n    font-weight: bold;\n    display: block;\n  }\n\n  .edit input[type=\"date\"],\n  .edit input[type=\"time\"] {\n    height: 100%;\n    padding: var(--size-xs) var(--size-xs);\n  }\n</style>\n\n{#if duration}\n  {#if !range.start}\n    <tr>\n      <td><span class=\"duration\"> <i class=\"warning\">warning</i> </span></td>\n      <td>Empty interval!</td>\n\n      <td class=\"options\">\n        <div class=\"buttons\">\n          <button\n            on:click={() => confirm('Are you sure?') && $removeDuration(duration.id)}\n          >\n            <i>delete</i>\n          </button>\n        </div>\n      </td>\n    </tr>\n  {:else}\n    <tr>\n      <td>\n        {#if hours < 0 || ($durationsOpen.length > 1 && !range.end)}\n          <i class=\"warning\">warning</i>\n        {/if}\n        <span class=\"duration\">{toPrettyDuration(hours)}</span>\n        {#if !range.end}<i class=\"timer\">timer</i>{/if}\n      </td>\n      <td>\n        <span class=\"range\">{range.start}–{#if range.end}\n            {range.end}\n          {:else}<strong class=\"timer\">now</strong>{/if}</span>\n      </td>\n\n      <td class=\"options\">\n        {#if editable}\n          <div class=\"buttons\">\n            <button on:click={() => (edit = true)}> <i>edit</i> </button><button\n              on:click={() => confirm('Are you sure?') && $removeDuration(duration.id)}\n            >\n              <i>delete</i>\n            </button>\n          </div>\n        {/if}\n      </td>\n    </tr>\n  {/if}\n{/if}\n\n{#if edit}\n  <tr class=\"edit\">\n    <td colspan=\"3\">\n      <form on:submit|preventDefault={handleSubmit}>\n        <p>\n          <span>Start</span>\n          <input\n            bind:value={startDate}\n            on:change={() => taskId && (endDate = startDate)}\n            type=\"date\"\n            required\n          />\n          <input\n            bind:value={startTime}\n            on:change={() => taskId && (endTime = startTime)}\n            type=\"time\"\n            required\n          />\n        </p>\n        {#if !keepTracking}\n          <p>\n            <span>End</span>\n            <input bind:value={endDate} type=\"date\" min={startDate} />\n            <input\n              bind:value={endTime}\n              type=\"time\"\n              min={startDate === endDate ? startTime : ''}\n            />\n          </p>\n        {/if}\n        <!--\n        {#if duration.end}\n          <p>\n            <label>Continue tracking the task\n              <input bind:checked={keepTracking} type=\"checkbox\" />\n            </label>\n          </p>\n        {/if}\n        -->\n        <div class=\"buttons\">\n          <button type=\"submit\">Save</button>\n          {#if duration}\n            <button type=\"reset\" on:click={() => (edit = false)}>Cancel</button>\n          {:else}\n            <button type=\"reset\" on:click={() => handleDone()}>Cancel</button>\n          {/if}\n        </div>\n      </form>\n    </td>\n  </tr>\n{/if}\n",
    "<script>\n  import { durations as d } from \"src/state/odoo\";\n  import Duration from \"./Duration.svelte\";\n\n  export let taskId;\n  export let editable;\n  export let durationIds;\n  export let createTimeEntry;\n  export let onCreateTimeEntryDone;\n\n  let durations, activeDurations, pastDurations;\n\n  $: {\n    durations = durationIds.map((durationId) => $d[durationId]);\n    // FIXME:\n    activeDurations = durations\n      .filter((duration) => duration && duration.end === false)\n      .sort((a, b) => b.start - a.start);\n    pastDurations = durations\n      .filter((duration) => duration && duration.end !== false)\n      .sort((a, b) => b.start - a.start);\n  }\n</script>\n\n<style>\n  table {\n    margin-top: var(--size-s);\n    width: 100%;\n    padding-bottom: var(--size-m);\n  }\n</style>\n\n{#if createTimeEntry}\n  <table>\n    <Duration {taskId} handleDone={onCreateTimeEntryDone} />\n  </table>\n{/if}\n\n<table>\n  {#if durations.length}\n    <thead>\n      <tr>\n        <th>Duration</th>\n        <th>Range</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {#each activeDurations as duration}\n        <Duration {editable} {duration} />\n      {/each}\n      {#each pastDurations as duration}\n        <Duration {editable} {duration} />\n      {/each}\n    </tbody>\n  {/if}\n</table>\n",
    "<script>\n  import { tasksToFix, projectList } from \"src/state/odoo\";\n  import Task from \"./Task.svelte\";\n  import Tasks from \"./Tasks.svelte\";\n  import { title } from \"src/state/runtime\";\n  title.set(\"Time Tracking\");\n</script>\n\n<style>\n  .warning {\n    color: var(--color-warning-fg);\n    background-color: var(--color-warning-bg);\n    padding: var(--size-xs);\n  }\n  ul {\n    list-style-type: none;\n    margin: 0 0 var(--size-m) 0;\n    padding: 0;\n  }\n</style>\n\n<section>\n  {#if $tasksToFix.length}\n    <h2>\n      <i class=\"warning\">warning</i>\n      Fix me: problems found in\n      {$tasksToFix.length}\n      task{$tasksToFix.length > 1 ? 's' : ''}\n    </h2>\n\n    <p>\n      <strong>Problem:</strong>\n      some time entries have incorrect values, or you are tracking multiple\n      tasks at the same time.\n    </p>\n\n    <p>\n      <strong>Solution:</strong>\n      In the tasks below, edit or delete the time entries marked with the\n      <i class=\"warning\">warning</i>\n      sign.\n    </p>\n\n    <details>\n      <summary>Why did it happen?</summary>\n\n      <p>\n        If you use the\n        <em>Time Management</em>\n        feature in Odoo, you might have multiple time entries\n        <strong>start</strong>\n        but don't specify an\n        <strong>end</strong>, or just have wrong time entries.\n      </p>\n    </details>\n\n    <ul>\n      {#each $tasksToFix as task}\n        <li>\n          <Task {task} openDetails={true} />\n        </li>\n      {/each}\n    </ul>\n  {/if}\n\n  <Tasks stage=\"todo\" list={$projectList} />\n</section>\n",
    "<script>\n  import { slide } from \"svelte/transition\";\n  import {\n    tasks,\n    currentTask,\n    currentDuration,\n    currentHoursTotal,\n    hoursByTask,\n    startDuration,\n    stopDuration,\n    markAsDone,\n  } from \"src/state/odoo\";\n  import { toPrettyDuration } from \"src/utils\";\n  import Durations from \"./Durations.svelte\";\n\n  export let task;\n  export let stages = [\"todo\"];\n  export let openDetails = false;\n\n  let createTimeEntry = false;\n  let working = false;\n\n  $: subtasks = task.subtaskIds.map((id) => $tasks[id]).filter((task) => task);\n  $: tracking = $currentTask && $currentTask.id === task.id;\n  $: currentHoursTotalProxy = tracking\n    ? $currentHoursTotal\n    : $hoursByTask[task.id];\n\n  async function handleStart() {\n    working = true;\n    if ($currentTask === undefined) {\n      await $startDuration(task.id);\n    } else {\n      const message = `You are tracking \"${$currentTask.name}\", wanna switch to \"${task.name}\" instead?`;\n      if (confirm(message)) {\n        await $stopDuration($currentDuration.id);\n        await $startDuration(task.id);\n      }\n    }\n    working = false;\n  }\n\n  async function handleStop() {\n    working = true;\n    await $stopDuration($currentDuration.id);\n    working = false;\n  }\n\n  async function handleMarkAsDone() {\n    const message = \"Mark the task as done?\";\n    if (confirm(message)) {\n      if (tracking) {\n        await $stopDuration($currentDuration.id);\n      }\n      await $markAsDone(task.id);\n    }\n  }\n</script>\n\n<style>\n  button.done {\n    background-color: var(--color-green);\n  }\n\n  button.done,\n  button.start,\n  button.stop {\n    border-radius: 100%;\n  }\n\n  .task {\n    background: #ffffff;\n    transition: all 1s;\n  }\n  .task.hasSubtasks {\n    padding: 0;\n  }\n\n  .tracking .stop {\n    background-color: var(--color-blue);\n  }\n\n  h3 {\n    margin: 0;\n    font-size: 1rem;\n    flex-grow: 1;\n    font-weight: normal;\n  }\n\n  .isSingleTask {\n    margin-bottom: var(--size-s);\n  }\n\n  .isParentTask {\n    margin-bottom: var(--size-m);\n  }\n\n  .isParentTask > .header h3 {\n    font-weight: bold;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n  }\n\n  .body {\n    padding: 0;\n  }\n\n  .hasSubtasks .header {\n    margin-bottom: var(--size-s);\n  }\n\n  .isSubtask .header {\n    padding: 0;\n  }\n  .isSubtask p {\n    margin: 0;\n  }\n\n  .header .start,\n  .header .stop,\n  .header .done {\n    order: -1;\n    margin-right: var(--size-s);\n    display: block;\n  }\n  .header .details {\n    border: none;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .buttons {\n    margin-top: var(--size-s);\n  }\n\n  i {\n    vertical-align: bottom;\n  }\n</style>\n\n<!--{task.id}, {task.name}, {task.lastUpdate}, {Array.from(task.stages).toString()}-->\n\n{#if stages.some(s => task.stages.has(s))}\n<div\n  id=\"task:{task.id}\"\n  class=\"task task--stage-{task.stage}\"\n  class:tracking\n  class:hasSubtasks={task.hasSubtasks}\n  class:isSubtask={task.isSubtask}\n  class:isParentTask={task.isParentTask}\n  class:isSingleTask={task.isSingleTask}>\n  <div class=\"header\">\n    <h3>\n      {task.name}\n    </h3>\n\n    {#if !task.hasSubtasks}\n      <button class=\"details\" on:click={() => {openDetails = !openDetails}}>\n        {#if openDetails}\n          <i>unfold_less</i>\n        {:else}\n          <i>unfold_more</i>\n        {/if}\n      </button>\n\n      {#if task.stage !== \"approved\"}\n        {#if task.stage === \"todo\"}\n          {#if tracking}\n          <button class=\"stop\" disabled={working} on:click={handleStop}>\n            <i>stop</i>\n          </button>\n          {:else}\n          <button class=\"start\" disabled={working} on:click={handleStart}>\n            <i>play_arrow</i>\n          </button>\n          {/if}\n        {:else}\n          <button class=\"done\" disabled={true}>\n            <i>done</i>\n          </button>\n        {/if}\n      {/if}\n    {/if}\n  </div>\n\n  <div class=\"body\" class:isSubtask={task.isSubtask}>\n    {#if task.hasSubtasks}\n      <ul>\n      {#each subtasks as subtask}\n          <li>\n            <svelte:self task={subtask} {stages} />\n          </li>\n      {/each}\n      </ul>\n    {:else}\n      {#if openDetails}\n        <!--h4>Description</h4>\n        <div>\n          {@html task.description}\n        </div-->\n\n        <div transition:slide={{duration: 200}}>\n\n          <p>\n            <strong>Total time:</strong> {toPrettyDuration(currentHoursTotalProxy)}.\n            {#if task.tier}\n            <strong>Tier:</strong> {task.tier}\n            {/if}\n          </p>\n\n          <div class=\"buttons\">\n            {#if task.stage === \"done\"}\n            <button disabled={working} on:click={handleStart}>\n              <i>play_arrow</i>\n              Track time\n            </button>\n            {:else if task.stage !== \"approved\"}\n            <button\n              on:click={handleMarkAsDone}\n              disabled={!task.hasDurations}>\n              <i>done</i>\n              Mark as done\n            </button>\n            {/if}\n\n            <a href=\"https://odoo.teledisko.com/web#model=project.task&id={task.id}&view_type=form\" target=\"_blank\" class=\"button\">\n              <i>open_in_new</i> Open in Odoo\n            </a>\n\n            {#if task.stage !== \"approved\"}\n            <button on:click={()=>createTimeEntry=true}>\n              <i>more_time</i>\n              New time entry\n            </button>\n            {/if}\n          </div>\n\n          <Durations\n            taskId={task.id}\n            editable={task.stage !== \"approved\"}\n            durationIds={task.durations}\n            {createTimeEntry}\n            onCreateTimeEntryDone={()=>createTimeEntry=false}\n            />\n        </div>\n      {/if}\n    {/if}\n  </div>\n</div>\n{/if}\n",
    "<script>\n  import { parse } from \"qs\";\n  import { afterUpdate } from \"svelte\";\n  import { replace, querystring } from \"svelte-spa-router\";\n  import { tasks, currentTask } from \"src/state/odoo\";\n  import Task from \"./Task.svelte\";\n  import Foldable from \"src/components/Foldable.svelte\";\n\n  export let list;\n  export let openDetails = false;\n\n  $: sortedList = list.sort((a, b) => a.sequence - b.sequence);\n  $: stages = sortedList.reduce((acc, curr) => {\n    acc[curr.id] = [\"todo\"];\n    return acc;\n  }, {});\n\n  afterUpdate(() => {\n    if ($currentTask && scrollToCurrent) {\n      const elem = document.getElementById(\"task:\" + $currentTask.id);\n      elem &&\n        window.setTimeout(\n          () =>\n            elem.scrollIntoView({\n              behavior: \"smooth\",\n              inline: \"center\",\n              block: \"center\",\n            }),\n          0\n        );\n      replace(\"#/tasks\");\n    }\n  });\n\n  $: scrollToCurrent = \"scrollToCurrent\" in parse($querystring);\n\n  function toggleDone(id) {\n    if (stages[id].includes(\"done\")) {\n      stages[id] = [\"todo\"];\n    } else {\n      stages[id] = [\"todo\", \"done\"];\n    }\n  }\n</script>\n\n<style>\n  ul {\n    list-style-type: none;\n    margin: 0 0 var(--size-m) 0;\n    padding: 0;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    margin-bottom: var(--size-s);\n    border-bottom: var(--line-size) solid var(--line-color);\n  }\n\n  .header h2 {\n    font-size: var(--font-l);\n    flex: 1;\n    margin: 0;\n  }\n\n  .header button {\n    border: none;\n  }\n\n  .header i {\n    font-size: 24px;\n  }\n\n  .metadata {\n    text-align: right;\n    font-size: var(--font-s);\n    color: var(--color-gray-7);\n  }\n\n  .metadata .toggle {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n</style>\n\n{#each sortedList as project}\n  <Foldable\n    key={['project', project.id].join(':')}\n    show={false}\n    showOverride={project.isTracking}>\n    <div slot=\"header\" class=\"header\" let:visible>\n      <h2>{project.name}</h2>\n      <button>\n        {#if visible}<i>unfold_less</i>{:else}<i>unfold_more</i>{/if}\n      </button>\n    </div>\n\n    <div slot=\"body\">\n      <div class=\"metadata\">\n        {#if project.stagesCount.done > 0}\n          <p>\n            <span\n              class=\"toggle\"\n              on:click|stopPropagation={toggleDone.bind(null, project.id)}>{stages[project.id].includes('done') ? 'Hide' : 'Show'}\n              completed tasks</span>\n          </p>\n        {/if}\n      </div>\n      {#if project.taskIds.length}\n        <ul>\n          {#each project.taskIds as taskId}\n            {#if $tasks[taskId] && $tasks[taskId].isParentTask}\n              <li>\n                <Task\n                  stages={stages[project.id]}\n                  task={$tasks[taskId]}\n                  {openDetails} />\n              </li>\n            {/if}\n          {/each}\n        </ul>\n      {:else}\n        <p>No tasks.</p>\n      {/if}\n    </div>\n  </Foldable>\n{/each}\n",
    "<script>\n  import { slide } from \"svelte/transition\";\n  import { toPrettyDuration } from \"src/utils\";\n\n  export let item;\n  let showDetails = false;\n\n  function displayTime(d) {\n    if (d) {\n      return d.getHours() + \":\" + d.getMinutes().toString().padStart(2, \"0\");\n    } else {\n      return \"now\";\n    }\n  }\n</script>\n\n<style>\n  .entry {\n    display: flex;\n    margin-bottom: var(--size-s);\n    height: var(--size-s);\n  }\n\n  .showDetails .entry {\n    height: auto;\n  }\n\n  ol {\n    list-style: none;\n  }\n\n  h5 {\n    width: var(--size-m);\n    margin: 0;\n  }\n\n  .activity {\n    background: #e0e0e0;\n    margin: 0;\n    flex: 1;\n    padding: 0;\n  }\n\n  .activity li {\n    position: relative;\n    height: 0;\n  }\n\n  .activity li.showDetails {\n    margin-bottom: var(--size-s);\n    height: auto;\n  }\n\n  .activity li.showDetails .metadata {\n    opacity: 1;\n  }\n\n  .activity .bar {\n    position: absolute;\n    top: 0;\n    height: var(--size-s);\n    background: #00000060;\n  }\n\n  .metadata {\n    opacity: 0;\n    padding: 0 var(--size-xs);\n  }\n\n  h5,\n  .time {\n    font-size: 0.8rem;\n  }\n</style>\n\n<div on:click={() => (showDetails = !showDetails)} class:showDetails>\n  <div class=\"entry\">\n    <h5>{item.day.getDate()}/{item.day.getMonth() + 1}</h5>\n    <ol class=\"activity\">\n      {#each item.activity as entry}\n        <li class:showDetails>\n          <span\n            class=\"bar\"\n            style=\"left: {entry.relativeStart * 100}%; right: {100 - entry.relativeEnd * 100}%\" />\n          <div class=\"metadata\">\n            <span class=\"time\">\n              {displayTime(entry.start)}–{#if entry.end}\n                {displayTime(entry.end)}\n              {:else}<strong class=\"timer\">now</strong>{/if},\n              {toPrettyDuration(entry.hours)}, stage:\n              {entry.task.stage}\n            </span>\n            <br />\n            {entry.task.name}\n          </div>\n        </li>\n      {/each}\n    </ol>\n  </div>\n</div>\n",
    "<script>\n  import Activity from \"./Activity.svelte\";\n  import { activityPerDay } from \"src/state/odoo/project\";\n  import { title } from \"src/state/runtime\";\n  title.set(\"Timeline\");\n</script>\n\n<style>\n  .entry {\n    display: flex;\n    margin-bottom: var(--size-xs);\n    position: sticky;\n    top: var(--size-m);\n    background: #ffffffdd;\n  }\n\n  ol {\n    list-style: none;\n  }\n\n  .time {\n    position: relative;\n    height: var(--size-s);\n    margin: 0;\n    flex: 1;\n    padding: 0;\n  }\n\n  .time li {\n    top: 0;\n    position: absolute;\n    font-size: 0.8rem;\n    transform: translateX(-50%);\n  }\n\n  .time li::before {\n    content: \"\";\n    position: absolute;\n    height: var(--size-xs);\n    border-left: 1px solid black;\n    top: 98%;\n    bottom: 100%;\n    left: 50%;\n    right: 50%;\n  }\n</style>\n\n<section>\n  <div class=\"entry\">\n    <ol class=\"time\">\n      <li style=\"left: 0\">0h</li>\n      <li style=\"left: 12.5%\">3h</li>\n      <li style=\"left: 25%\">6h</li>\n      <li style=\"left: 37.5%\">9h</li>\n      <li style=\"left: 50%\">12h</li>\n      <li style=\"left: 62.5%\">15h</li>\n      <li style=\"left: 75%\">18h</li>\n      <li style=\"left: 87.5%\">21h</li>\n      <li style=\"left: 100%\">24h</li>\n    </ol>\n  </div>\n\n  {#each $activityPerDay as item}\n    <Activity {item} />\n  {/each}\n</section>\n",
    "<script>\n  import { tokenContract, balance, hasAgent, signer } from \"../../state/eth\";\n  import { user } from \"../../state/odoo\";\n  import { title } from \"../../state/runtime\";\n  import {\n    toPrettyCurrency,\n    fromFloatNumber,\n    toFloatNumber,\n    toShortAddress,\n  } from \"../../utils\";\n  import CONFIG from \"../../config\";\n\n  title.set(\"Tokens\");\n\n  let floatAmount;\n\n  function setAmount(perc) {\n    floatAmount = (toFloatNumber($balance) * perc) / 100;\n  }\n\n  async function handleSellSubmit() {\n    try {\n      await $tokenContract.transfer(\n        CONFIG.oracleAddress,\n        fromFloatNumber(floatAmount)\n      );\n    } catch (e) {\n      if (e.code !== 4001) {\n        throw e;\n      }\n    }\n  }\n</script>\n\n<style>\n  .balance h2,\n  .balance .address {\n    font-size: var(--size-s);\n    color: gray;\n  }\n\n  .balance .value {\n    font-size: var(--size-m);\n    font-weight: bold;\n    margin: 0;\n  }\n\n  .perc button {\n    color: gray;\n    border: none;\n    text-decoration: underline;\n  }\n\n  .disclaimer {\n    background-color: var(--color-warning-bg);\n  }\n</style>\n\n{#if $balance && $user}\n  <div class=\"disclaimer\">\n    <section>\n      <p>\n        <strong>Note:</strong>\n        all transactions are sent to the Rinkeby testnet, and no real value is\n        attached to the token. More work has to be done to a) make\n        TelediskoTaler a real security token with real value; and b) implement\n        all the rules specified in the\n        <em>Wuschwelt</em>\n        document.\n      </p>\n      <p>\n        In the meantime use this space to experiment and learn how to use and\n        manage your tokens.\n      </p>\n    </section>\n  </div>\n  <section>\n    <div class=\"balance\">\n      <h2>Current balance</h2>\n      <p class=\"value\">{toPrettyCurrency($balance)}</p>\n      <p class=\"address\">{toShortAddress($user.address)}</p>\n    </div>\n  </section>\n\n  <section>\n    <h3>Sell tokens</h3>\n\n    {#if $hasAgent && $tokenContract}\n      <form on:submit|preventDefault={handleSellSubmit}>\n        <label for=\"sell-token-amount\">Amount</label>\n        <span class=\"perc\"><button\n            type=\"button\"\n            on:click={() => setAmount(100)}\n          >100%</button>,\n          <button type=\"button\" on:click={() => setAmount(75)}>75%</button>,\n          <button type=\"button\" on:click={() => setAmount(50)}>50%</button>,\n          <button\n            type=\"button\"\n            on:click={() => setAmount(25)}\n          >25%</button></span>\n        <input\n          id=\"sell-token-amount\"\n          autocomplete=\"off\"\n          bind:value={floatAmount}\n          min=\"0\"\n          max={toFloatNumber($balance)}\n          required\n        />\n        <button>Sell</button>\n      </form>\n    {:else}\n      To sell your tokens connect you need to connect with a wallet enabled\n      browser.\n    {/if}\n  </section>\n{/if}\n"
  ],
  "names": [],
  "mappings": "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"
}